/***
 * Words.cpp
 *
 *  Created on: Dec 11, 2010
 */

#include "Words.h"

Words::Words()
{
	srand(time(NULL));
    createSlogans();
    createMovements();
    createAdVerbs();
    createLocations();
    createFatalities();
}

Words::~Words()
{
	// Auto-generated
}

/* VECTOR CREATION */
void Words::createMovements()
{
    movements.push_back("run");
    movements.push_back("jog");
    movements.push_back("walk");
    movements.push_back("stroll");
    movements.push_back("saunter");
    movements.push_back("canter");
    movements.push_back("amble");
    movements.push_back("dash");
    movements.push_back("scuttle");
    movements.push_back("sprint");
    movements.push_back("trot");
    movements.push_back("gallop");
}

void Words::createAdVerbs()
{
    adVerbs.push_back("hastely");
    adVerbs.push_back("quickly");
    adVerbs.push_back("furiousy");
    adVerbs.push_back("dynamically");
    adVerbs.push_back("briskly");
    adVerbs.push_back("fluently");
    adVerbs.push_back("promptly");
    adVerbs.push_back("readily");
    adVerbs.push_back("politely");
}

void Words::createLocations()
{
    locations.push_back("swamp");
    locations.push_back("forest");
    locations.push_back("abandoned house");
    locations.push_back("derelict motel");
    locations.push_back("dimly lit dungeon");
    locations.push_back("haunted castle");
    locations.push_back("somewhat ominous castle");
    locations.push_back("quaint cottage");
    locations.push_back("busy whore house");
    locations.push_back("office complex");
    locations.push_back("affulent suburb");
}

void Words::createFatalities()
{
	fatalities.push_back("gives a lethally stern talking to");
	fatalities.push_back("decapitates");
	fatalities.push_back("disembowels");
	fatalities.push_back("fillets");
	fatalities.push_back("pwnz0rs");
	fatalities.push_back("maims");
	fatalities.push_back("slays");
	fatalities.push_back("massacres");
	fatalities.push_back("sluaghters");
	fatalities.push_back("annihilates");
	fatalities.push_back("gives a one-way ticket to hell to");
	fatalities.push_back("gives a haircut (with a little too much off the top) to");
}

void Words::createSlogans()
{
    slogans.push_back("Always Moderately Different");
    slogans.push_back("Certain to Contain Poor Grammer");
}

/* GETTERS */
string Words::getSlogan()
{
	index = getRandomIndex(slogans.size());
	return slogans.at(index);
}

string Words::getMovement()
{
	index = getRandomIndex(movements.size());
	return movements.at(index);
}

string Words::getAdVerb()
{
	index = getRandomIndex(adVerbs.size());
	return adVerbs.at(index);
}

string Words::getLocation()
{
	index = getRandomIndex(locations.size());
	return locations.at(index);
}

string Words::getFatality()
{
	index = getRandomIndex(fatalities.size());
	return fatalities.at(index);
}

/* Randomize Index */
int Words::getRandomIndex(int max)
{
	return rand() % max;
}
